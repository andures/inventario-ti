const mongoose = require("mongoose");
require("dotenv").config();

const User = require("./backend/models/User");

/**
 * Script para crear usuario administrador inicial
 * Ejecutar: node seed.js
 *
 * IMPORTANTE: Las credenciales se toman de las variables de entorno (.env)
 * para mayor seguridad.
 */

const seedAdmin = async () => {
  try {
    // Validar que existan las variables de entorno necesarias
    if (
      !process.env.ADMIN_EMAIL ||
      !process.env.ADMIN_PASSWORD ||
      !process.env.ADMIN_NOMBRE
    ) {
      console.error("‚ùå Error: Faltan variables de entorno");
      console.error("Por favor configura en el archivo .env:");
      console.error("  - ADMIN_NOMBRE");
      console.error("  - ADMIN_EMAIL");
      console.error("  - ADMIN_PASSWORD");
      process.exit(1);
    }

    // Validar contrase√±a segura
    if (process.env.ADMIN_PASSWORD.length < 8) {
      console.error("‚ùå Error: La contrase√±a debe tener al menos 8 caracteres");
      process.exit(1);
    }

    // Conectar a MongoDB
    await mongoose.connect(process.env.MONGO_URI);
    console.log("‚úÖ Conectado a MongoDB");

    // Verificar si ya existe un administrador
    const adminExiste = await User.findOne({ rol: "administrador_ti" });

    if (adminExiste) {
      console.log("‚ö†Ô∏è  Ya existe un usuario administrador en la base de datos");
      console.log(`üìß Email: ${adminExiste.email}`);
      console.log(`üë§ Nombre: ${adminExiste.nombre}`);
      process.exit(0);
    }

    // Crear usuario administrador usando variables de entorno
    const admin = await User.create({
      nombre: process.env.ADMIN_NOMBRE,
      email: process.env.ADMIN_EMAIL,
      password: process.env.ADMIN_PASSWORD,
      rol: "administrador_ti",
      activo: true,
    });

    console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
    console.log("‚úÖ Usuario administrador creado exitosamente");
    console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
    console.log("üìß Email:", admin.email);
    console.log("ÔøΩ Nombre:", admin.nombre);
    console.log("üë§ Rol:", admin.rol);
    console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
    console.log("‚ö†Ô∏è  IMPORTANTE: Las credenciales est√°n en el archivo .env");
    console.log("‚ö†Ô∏è  NO compartas el archivo .env (ya est√° en .gitignore)");
    console.log("‚ö†Ô∏è  Cambia la contrase√±a despu√©s del primer login");
    console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");

    process.exit(0);
  } catch (error) {
    console.error("‚ùå Error:", error.message);
    process.exit(1);
  }
};

// Ejecutar seed
seedAdmin();
